name: Deploy to DockerHub and restart on a server
on:
  push:
    branches:
      - main
    paths:
      - 'rest-api/**'
      - '.github/workflows/09-publish-to-docker.yml'
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: rest-api

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: maven

      - name: Build with Maven
        run: mvn clean install

      - name: Copy the JAR to hello.jar
        run: |
          cd target
          cp hello*.jar hello.jar
          cd ..

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: java-app-for-container
          path: '${{github.workspace}}/rest-api/target/hello.jar'

  upload-to-dockerhub:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app-for-container
          path: rest-api/target

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/hello-java

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: rest-api
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Restart the container on the server
    needs: upload-to-dockerhub
    runs-on: ubuntu-latest
    steps:
      - name: Log into the Ubuntu server with SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ secrets.SSH_WORKING_TARGET_PATH }}
            sudo docker stop hello-java
            sudo docker rm hello-java
            sudo docker run -d -p 80:80 --name hello-java ${{secrets.DOCKERHUB_USERNAME}}/hello-java:latest
